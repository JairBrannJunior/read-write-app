package View;

import Controller.Binary.ClientBinaryController;
import Controller.Text.ClientController;
import Model.Client;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Jair Brannn Junior RA: 2052075
 */
public class ClientView extends javax.swing.JFrame {

    public ClientController clientController = new ClientController(1);
    public ClientBinaryController clientBinaryController = new ClientBinaryController(0);
    public int modelId = 0;
    public String modelNome;
    public String modelEndereco;
    public List<Integer> listUniqueId = new ArrayList<>(); 
    public int uniqueId;
    public static int typeFile;

    public ClientView(int typeFile) {
        this.typeFile = typeFile;
        initComponents();
        setModelId();
        InitTable();
    }

    public void setModelId() {
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                if (jTable1.getSelectedRow() >= 0) {
                    modelId = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                    modelNome = (jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                    modelEndereco = (jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                    campoNome.setText(modelNome);
                    campoEndereco.setText(modelEndereco);
                }
            }
        });
    }
    
    public int getUniqueId() {
        for(int i = 0;i<jTable1.getModel().getRowCount();i++) {      
            if (!listUniqueId.contains(Integer.parseInt(jTable1.getModel().getValueAt(i,0).toString()))) {
                listUniqueId.add(Integer.parseInt(jTable1.getModel().getValueAt(i,0).toString()));
            }
        }
        
        Collections.reverse(listUniqueId);
        if (!listUniqueId.isEmpty()) {
            uniqueId = Integer.parseInt(listUniqueId.get(0).toString());
        }else {
            uniqueId = 0;
        }
        
        do {
            uniqueId++;
        }while(listUniqueId.contains(uniqueId));
        return uniqueId;
    }
    
    public void removeListUnique(int id) {    
        Iterator itr = listUniqueId.iterator(); 
        while (itr.hasNext()) 
        { 
            int x = (Integer)itr.next(); 
            if (x == id) 
                itr.remove(); 
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campoNome = new javax.swing.JTextField();
        campoEndereco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cliente");

        jLabel1.setText("Nome:");

        campoNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNomeActionPerformed(evt);
            }
        });

        jLabel2.setText("Endereço:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Adicionar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Atualizar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Remover");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Retornar a Seleção");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(campoNome))))
                .addContainerGap(212, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(campoEndereco)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void campoNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNomeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (campoNome.getText().isEmpty() || campoEndereco.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios!", "Aviso!", 2);
        } else if(campoNome.getText().contains(",") || campoEndereco.getText().contains(",")){
            JOptionPane.showMessageDialog(null, "Caractere ',' inválido!", "Aviso!", 2);
        }else{
            if (typeFile == 0) {
                Client newClient = new Client();
                newClient.id = getUniqueId();
                newClient.nome = campoNome.getText();
                newClient.endereço = campoEndereco.getText();
                clientBinaryController.genericList.add(newClient);                
            }else {
                String newModel = getUniqueId() + "," + campoNome.getText() + "," + campoEndereco.getText();
                clientController.setNewModel(newModel);
            }
            if (typeFile == 0 ? clientBinaryController.write(true) : clientController.write(true)) {
                JOptionPane.showMessageDialog(null, "Dados salvos com sucesso!", "Sucesso", 1);
                campoNome.setText("");
                campoEndereco.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao salvar os dados!", "Erro", 0);
            }
            InitTable();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (modelId > 0) {
            if(typeFile == 0 ? clientBinaryController.remove(modelId) : clientController.remove(modelId)) {
                removeListUnique(modelId);
                JOptionPane.showMessageDialog(null, "Item removido com sucesso!", "Sucesso", 1);           
                InitTable();         
                campoNome.setText("");
                campoEndereco.setText("");
            }else {
                JOptionPane.showMessageDialog(null, "Erro ao remover o item!", "Erro!", 0);           
            }
        }else {
            JOptionPane.showMessageDialog(null, "Nenhuma linha selecionada", "Aviso!", 2);           
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Client editedClient = new Client();
        if (typeFile == 0) {
            editedClient.id = modelId;
            editedClient.nome = campoNome.getText();
            editedClient.endereço = campoEndereco.getText();            
        }else {
            String updateModel = modelId + "," + campoNome.getText() + "," + campoEndereco.getText();   
            clientController.setNewModel(updateModel);
        }
        
        if (campoNome.getText().isEmpty() || campoEndereco.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios!", "Aviso!", 2);
        } else if(campoNome.getText().contains(",") || campoEndereco.getText().contains(",")){
            JOptionPane.showMessageDialog(null, "Caractere ',' inválido!", "Aviso!", 2);
        }else if(typeFile == 0 ? clientBinaryController.Update(editedClient) : clientController.Update(modelId)) {
            JOptionPane.showMessageDialog(null, "Item atualizado com sucesso!", "Sucesso", 1);
            InitTable();
        }else {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar o item!", "Erro!", 0);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        dispose();
        new OptionView(typeFile).setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientView(typeFile).setVisible(true);
            }
        });
    }

    public void InitTable() {
        Vector<Vector<String>> data = new Vector<Vector<String>>();
        Vector<String> col = new Vector<String>();
        col.add("Id");
        col.add("Nome");
        col.add("Endereço");

        if (typeFile == 0) {
            clientBinaryController.read();
            clientBinaryController.genericList.forEach((item) -> {
                Vector<String> tempItem = new Vector<String>();
                Client client = (Client) item;
                tempItem.add(client.id + "");
                tempItem.add(client.nome);
                tempItem.add(client.endereço);
                data.add(tempItem);
            });            
        }else {
            ArrayList<String> clients = clientController.ReadAll();
            clients.forEach((client) -> {
                Vector<String> tempItem = new Vector<String>();
                String[] splitedClient = client.split(",");
                tempItem.add(splitedClient[0]);
                tempItem.add(splitedClient[1]);
                tempItem.add(splitedClient[2]);
                data.add(tempItem);
            });            
        }

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                data,
                col
        ));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField campoEndereco;
    private javax.swing.JTextField campoNome;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
